plugins {
    id "io.spring.dependency-management" version "1.0.6.RELEASE"
    id "com.github.johnrengelman.shadow" version "4.0.2"
    id "jp.classmethod.aws.lambda" version "0.38"
    id "java"
    id "net.ltgt.apt-eclipse" version "0.21"
    id "net.ltgt.apt-idea" version "0.21"
    id "application"
}



version "0.1"
group "simple.function"

repositories {
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
}

dependencyManagement {
    imports {
        mavenBom 'io.micronaut:micronaut-bom:1.1.3'
    }
}

configurations {
    // for dependencies that are needed for development only
    developmentOnly 
}

dependencies {
    annotationProcessor "io.micronaut:micronaut-inject-java"
    annotationProcessor "io.micronaut:micronaut-validation"
    compileOnly "com.oracle.substratevm:svm"
    annotationProcessor "io.micronaut:micronaut-graal"
    compile group: 'com.amazonaws', name: 'aws-java-sdk-kinesis', version: '1.11.584'
    compile 'org.apache.commons:commons-lang3:3.5'
    testCompile group: 'junit', name: 'junit', version: '4.4'
    compile "io.micronaut:micronaut-inject"
    compile "io.micronaut:micronaut-validation"
    compile "io.micronaut:micronaut-runtime"
    compile "io.micronaut:micronaut-function-aws"
    compile "javax.annotation:javax.annotation-api"
    runtime "com.amazonaws:aws-lambda-java-log4j2:1.0.0"
    runtime "org.apache.logging.log4j:log4j-slf4j-impl:2.9.1"
    testAnnotationProcessor "io.micronaut:micronaut-inject-java"
    testCompile "org.junit.jupiter:junit-jupiter-api"
    testCompile "io.micronaut.test:micronaut-test-junit5"
    testCompile "io.micronaut:micronaut-function-client"
    testCompile "io.micronaut:micronaut-inject-java"
    testRuntime "org.junit.jupiter:junit-jupiter-engine"
    testCompile "io.micronaut.test:micronaut-test-junit5:1.0.4"
    testCompile "org.mockito:mockito-junit-jupiter:2.22.0"
    testRuntime "org.junit.jupiter:junit-jupiter-engine:5.1.0"

    testRuntime "io.micronaut:micronaut-http-server-netty"
    testRuntime "io.micronaut:micronaut-function-web"
}

test.classpath += configurations.developmentOnly
shadowJar {
    transform(com.github.jengelman.gradle.plugins.shadow.transformers.Log4j2PluginsCacheFileTransformer)
}
// use JUnit 5 platform
test {
    useJUnitPlatform()
}
tasks.withType(JavaCompile){
    options.encoding = "UTF-8"
    options.compilerArgs.add('-parameters')
}

shadowJar {
    mergeServiceFiles()
}

run.classpath += configurations.developmentOnly
run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')
mainClassName = "simple.function.SimpleFunctionFunction"
applicationDefaultJvmArgs = [""]
archivesBaseName = 'simple-function'
jar {
    manifest {
        attributes 'Main-Class': mainClassName
    }
}

if(new File("${System.getProperty("user.home")}/.aws/credentials").exists()) {
    task deploy(type: jp.classmethod.aws.gradle.lambda.AWSLambdaMigrateFunctionTask, dependsOn: shadowJar) {
        functionName = "simple-function"
        handler = "simple.function.SimpleFunctionFunction::apply"
        role = "arn:aws:iam::${aws.accountId}:role/lambda_basic_execution"
        runtime = com.amazonaws.services.lambda.model.Runtime.Java8
        zipFile = shadowJar.archivePath
        memorySize = 192
        timeout = 60
    }

}
